def expected_symbols() -> dict[str, tuple[str, str]]:
	return {
		'typing#Any': ('typing#Any', 'Any'),
		'typing#Callable': ('typing#Callable', 'Callable'),
		'typing#ClassVar': ('typing#ClassVar', 'ClassVar'),
		'typing#IO': ('typing#IO', 'IO'),
		'typing#Generic': ('typing#Generic', 'Generic'),
		'typing#NamedTuple': ('typing#NamedTuple', 'NamedTuple'),
		'typing#Protocol': ('typing#Protocol', 'Protocol'),
		'typing#Sequence': ('typing#Sequence', 'Sequence'),
		'typing#TypeAlias': ('typing#TypeAlias', 'TypeAlias'),
		'typing#TypeVar': ('typing#TypeVar', 'TypeVar'),
		'typing#TypeVarTuple': ('typing#TypeVarTuple', 'TypeVarTuple'),
		'typing#Union': ('typing#Union', 'Union'),
		'typing#T': ('typing#T', 'T'),
		'typing#Self': ('typing#Self', 'Self'),
		'typing#type': ('typing#type', 'type<T>'),
		'typing#Iterator': ('typing#Iterator', 'Iterator<T>'),
		'typing#Iterator.__next__': ('typing#Iterator.__next__', '__next__(Iterator<T>) -> T'),
		'typing#ParamSpec': ('typing#ParamSpec', 'ParamSpec'),
		'typing#ParamSpec.args': ('typing#ParamSpec.args', 'args'),
		'typing#ParamSpec.kwargs': ('typing#ParamSpec.kwargs', 'kwargs'),
		'typing#cast': ('typing#cast', 'cast(type<T>, Any) -> T'),
		'typing#Iterator.__next__.self': ('typing#Iterator', 'Iterator<T>'),
		'typing#cast.to': ('typing#type', 'type<T>'),
		'typing#cast.value': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.python.template#T': ('rogw.tranp.compatible.python.template#T', 'T'),
		'rogw.tranp.compatible.python.template#T_Key': ('rogw.tranp.compatible.python.template#T_Key', 'T_Key'),
		'rogw.tranp.compatible.python.template#T_Value': ('rogw.tranp.compatible.python.template#T_Value', 'T_Value'),
		'rogw.tranp.compatible.python.template#T_Self': ('rogw.tranp.compatible.python.template#T_Self', 'T_Self'),
		'rogw.tranp.compatible.python.template#TypeVar': ('typing#TypeVar', 'TypeVar'),
		'rogw.tranp.compatible.libralies.classes#str': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#__actual__': ('rogw.tranp.compatible.libralies.classes#__actual__', '__actual__(str) -> Callable<T, T>'),
		'rogw.tranp.compatible.libralies.classes#__actual__.decorator': ('rogw.tranp.compatible.libralies.classes#__actual__.decorator', 'decorator(T) -> T'),
		'rogw.tranp.compatible.libralies.classes#Union': ('rogw.tranp.compatible.libralies.classes#Union', 'Union'),
		'rogw.tranp.compatible.libralies.classes#Unknown': ('rogw.tranp.compatible.libralies.classes#Unknown', 'Unknown'),
		'rogw.tranp.compatible.libralies.classes#int': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#float': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#bool': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#None': ('rogw.tranp.compatible.libralies.classes#None', 'None'),
		'rogw.tranp.compatible.libralies.classes#int.__init__': ('rogw.tranp.compatible.libralies.classes#int.__init__', '__init__(int, Union<int, float, bool>) -> None'),
		'rogw.tranp.compatible.libralies.classes#int.__eq__': ('rogw.tranp.compatible.libralies.classes#int.__eq__', '__eq__(int, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#int.__ne__': ('rogw.tranp.compatible.libralies.classes#int.__ne__', '__ne__(int, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#int.__lt__': ('rogw.tranp.compatible.libralies.classes#int.__lt__', '__lt__(int, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#int.__gt__': ('rogw.tranp.compatible.libralies.classes#int.__gt__', '__gt__(int, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#int.__le__': ('rogw.tranp.compatible.libralies.classes#int.__le__', '__le__(int, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#int.__ge__': ('rogw.tranp.compatible.libralies.classes#int.__ge__', '__ge__(int, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#int.__not__': ('rogw.tranp.compatible.libralies.classes#int.__not__', '__not__(int, Union<int, float, bool, str>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#int.__add__': ('rogw.tranp.compatible.libralies.classes#int.__add__', '__add__(int, Union<int, bool>) -> int'),
		'rogw.tranp.compatible.libralies.classes#int.__sub__': ('rogw.tranp.compatible.libralies.classes#int.__sub__', '__sub__(int, Union<int, bool>) -> int'),
		'rogw.tranp.compatible.libralies.classes#int.__mul__': ('rogw.tranp.compatible.libralies.classes#int.__mul__', '__mul__(int, Union<int, bool>) -> int'),
		'rogw.tranp.compatible.libralies.classes#int.__truediv__': ('rogw.tranp.compatible.libralies.classes#int.__truediv__', '__truediv__(int, Union<int, bool>) -> float'),
		'rogw.tranp.compatible.libralies.classes#int.__mod__': ('rogw.tranp.compatible.libralies.classes#int.__mod__', '__mod__(int, Union<int, bool>) -> int'),
		'rogw.tranp.compatible.libralies.classes#int.__and__': ('rogw.tranp.compatible.libralies.classes#int.__and__', '__and__(int, Union<int, bool>) -> int'),
		'rogw.tranp.compatible.libralies.classes#int.__or__': ('rogw.tranp.compatible.libralies.classes#int.__or__', '__or__(int, Union<int, bool>) -> int'),
		'rogw.tranp.compatible.libralies.classes#int.__int__': ('rogw.tranp.compatible.libralies.classes#int.__int__', '__int__(int) -> int'),
		'rogw.tranp.compatible.libralies.classes#int.__float__': ('rogw.tranp.compatible.libralies.classes#int.__float__', '__float__(int) -> float'),
		'rogw.tranp.compatible.libralies.classes#int.__str__': ('rogw.tranp.compatible.libralies.classes#int.__str__', '__str__(int) -> str'),
		'rogw.tranp.compatible.libralies.classes#float.__init__': ('rogw.tranp.compatible.libralies.classes#float.__init__', '__init__(float, Union<int, float, bool>) -> None'),
		'rogw.tranp.compatible.libralies.classes#float.__eq__': ('rogw.tranp.compatible.libralies.classes#float.__eq__', '__eq__(float, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#float.__ne__': ('rogw.tranp.compatible.libralies.classes#float.__ne__', '__ne__(float, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#float.__lt__': ('rogw.tranp.compatible.libralies.classes#float.__lt__', '__lt__(float, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#float.__gt__': ('rogw.tranp.compatible.libralies.classes#float.__gt__', '__gt__(float, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#float.__le__': ('rogw.tranp.compatible.libralies.classes#float.__le__', '__le__(float, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#float.__ge__': ('rogw.tranp.compatible.libralies.classes#float.__ge__', '__ge__(float, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#float.__not__': ('rogw.tranp.compatible.libralies.classes#float.__not__', '__not__(float, Union<int, float, bool, str>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#float.__add__': ('rogw.tranp.compatible.libralies.classes#float.__add__', '__add__(float, Union<int, float, bool>) -> float'),
		'rogw.tranp.compatible.libralies.classes#float.__sub__': ('rogw.tranp.compatible.libralies.classes#float.__sub__', '__sub__(float, Union<int, float, bool>) -> float'),
		'rogw.tranp.compatible.libralies.classes#float.__mul__': ('rogw.tranp.compatible.libralies.classes#float.__mul__', '__mul__(float, Union<int, float, bool>) -> float'),
		'rogw.tranp.compatible.libralies.classes#float.__truediv__': ('rogw.tranp.compatible.libralies.classes#float.__truediv__', '__truediv__(float, Union<int, float, bool>) -> float'),
		'rogw.tranp.compatible.libralies.classes#float.__mod__': ('rogw.tranp.compatible.libralies.classes#float.__mod__', '__mod__(float, Union<int, float>) -> float'),
		'rogw.tranp.compatible.libralies.classes#float.__int__': ('rogw.tranp.compatible.libralies.classes#float.__int__', '__int__(float) -> int'),
		'rogw.tranp.compatible.libralies.classes#float.__float__': ('rogw.tranp.compatible.libralies.classes#float.__float__', '__float__(float) -> float'),
		'rogw.tranp.compatible.libralies.classes#float.__str__': ('rogw.tranp.compatible.libralies.classes#float.__str__', '__str__(float) -> str'),
		'rogw.tranp.compatible.libralies.classes#str.__init__': ('rogw.tranp.compatible.libralies.classes#str.__init__', '__init__(str, Union<int, float>) -> None'),
		'rogw.tranp.compatible.libralies.classes#list': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#str.split': ('rogw.tranp.compatible.libralies.classes#str.split', 'split(str, str) -> list<str>'),
		'rogw.tranp.compatible.libralies.classes#str.join': ('rogw.tranp.compatible.libralies.classes#str.join', 'join(str, Iterator<T>) -> str'),
		'rogw.tranp.compatible.libralies.classes#str.replace': ('rogw.tranp.compatible.libralies.classes#str.replace', 'replace(str, str, str) -> str'),
		'rogw.tranp.compatible.libralies.classes#str.find': ('rogw.tranp.compatible.libralies.classes#str.find', 'find(str, str) -> int'),
		'rogw.tranp.compatible.libralies.classes#str.rfind': ('rogw.tranp.compatible.libralies.classes#str.rfind', 'rfind(str, str) -> int'),
		'rogw.tranp.compatible.libralies.classes#str.startswith': ('rogw.tranp.compatible.libralies.classes#str.startswith', 'startswith(str, str) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.endswith': ('rogw.tranp.compatible.libralies.classes#str.endswith', 'endswith(str, str) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.format': ('rogw.tranp.compatible.libralies.classes#str.format', 'format(str, str, Any) -> str'),
		'rogw.tranp.compatible.libralies.classes#str.__eq__': ('rogw.tranp.compatible.libralies.classes#str.__eq__', '__eq__(str, str) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.__ne__': ('rogw.tranp.compatible.libralies.classes#str.__ne__', '__ne__(str, str) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.__lt__': ('rogw.tranp.compatible.libralies.classes#str.__lt__', '__lt__(str, str) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.__gt__': ('rogw.tranp.compatible.libralies.classes#str.__gt__', '__gt__(str, str) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.__le__': ('rogw.tranp.compatible.libralies.classes#str.__le__', '__le__(str, str) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.__ge__': ('rogw.tranp.compatible.libralies.classes#str.__ge__', '__ge__(str, str) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.__not__': ('rogw.tranp.compatible.libralies.classes#str.__not__', '__not__(str, Union<int, float, bool, str>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#str.__add__': ('rogw.tranp.compatible.libralies.classes#str.__add__', '__add__(str, str) -> str'),
		'rogw.tranp.compatible.libralies.classes#str.__mul__': ('rogw.tranp.compatible.libralies.classes#str.__mul__', '__mul__(str, int) -> str'),
		'rogw.tranp.compatible.libralies.classes#str.__int__': ('rogw.tranp.compatible.libralies.classes#str.__int__', '__int__(str) -> int'),
		'rogw.tranp.compatible.libralies.classes#str.__float__': ('rogw.tranp.compatible.libralies.classes#str.__float__', '__float__(str) -> float'),
		'rogw.tranp.compatible.libralies.classes#str.__str__': ('rogw.tranp.compatible.libralies.classes#str.__str__', '__str__(str) -> str'),
		'rogw.tranp.compatible.libralies.classes#bool.__init__': ('rogw.tranp.compatible.libralies.classes#bool.__init__', '__init__(bool, Union<int, float, bool>) -> None'),
		'rogw.tranp.compatible.libralies.classes#bool.__eq__': ('rogw.tranp.compatible.libralies.classes#bool.__eq__', '__eq__(bool, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__ne__': ('rogw.tranp.compatible.libralies.classes#bool.__ne__', '__ne__(bool, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__lt__': ('rogw.tranp.compatible.libralies.classes#bool.__lt__', '__lt__(bool, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__gt__': ('rogw.tranp.compatible.libralies.classes#bool.__gt__', '__gt__(bool, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__le__': ('rogw.tranp.compatible.libralies.classes#bool.__le__', '__le__(bool, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__ge__': ('rogw.tranp.compatible.libralies.classes#bool.__ge__', '__ge__(bool, Union<int, float, bool>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__not__': ('rogw.tranp.compatible.libralies.classes#bool.__not__', '__not__(bool, Union<int, float, bool, str>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__add__': ('rogw.tranp.compatible.libralies.classes#bool.__add__', '__add__(bool, bool) -> int'),
		'rogw.tranp.compatible.libralies.classes#bool.__sub__': ('rogw.tranp.compatible.libralies.classes#bool.__sub__', '__sub__(bool, bool) -> int'),
		'rogw.tranp.compatible.libralies.classes#bool.__mul__': ('rogw.tranp.compatible.libralies.classes#bool.__mul__', '__mul__(bool, bool) -> int'),
		'rogw.tranp.compatible.libralies.classes#bool.__truediv__': ('rogw.tranp.compatible.libralies.classes#bool.__truediv__', '__truediv__(bool, bool) -> float'),
		'rogw.tranp.compatible.libralies.classes#bool.__mod__': ('rogw.tranp.compatible.libralies.classes#bool.__mod__', '__mod__(bool, bool) -> int'),
		'rogw.tranp.compatible.libralies.classes#bool.__and__': ('rogw.tranp.compatible.libralies.classes#bool.__and__', '__and__(bool, bool) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__or__': ('rogw.tranp.compatible.libralies.classes#bool.__or__', '__or__(bool, bool) -> bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__int__': ('rogw.tranp.compatible.libralies.classes#bool.__int__', '__int__(bool) -> int'),
		'rogw.tranp.compatible.libralies.classes#bool.__float__': ('rogw.tranp.compatible.libralies.classes#bool.__float__', '__float__(bool) -> float'),
		'rogw.tranp.compatible.libralies.classes#bool.__str__': ('rogw.tranp.compatible.libralies.classes#bool.__str__', '__str__(bool) -> str'),
		'rogw.tranp.compatible.libralies.classes#list.__init__': ('rogw.tranp.compatible.libralies.classes#list.__init__', '__init__(list<T_Value>, Iterator<T_Value>) -> None'),
		'rogw.tranp.compatible.libralies.classes#list.__iter__': ('rogw.tranp.compatible.libralies.classes#list.__iter__', '__iter__(list<T_Value>) -> Iterator<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.__mul__': ('rogw.tranp.compatible.libralies.classes#list.__mul__', '__mul__(list<T_Value>, int) -> list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.__contains__': ('rogw.tranp.compatible.libralies.classes#list.__contains__', '__contains__(list<T_Value>, T_Value) -> bool'),
		'rogw.tranp.compatible.libralies.classes#list.append': ('rogw.tranp.compatible.libralies.classes#list.append', 'append(list<T_Value>, T_Value) -> None'),
		'rogw.tranp.compatible.libralies.classes#list.insert': ('rogw.tranp.compatible.libralies.classes#list.insert', 'insert(list<T_Value>, int, T_Value) -> None'),
		'rogw.tranp.compatible.libralies.classes#list.extend': ('rogw.tranp.compatible.libralies.classes#list.extend', 'extend(list<T_Value>, Iterator<T_Value>) -> None'),
		'rogw.tranp.compatible.libralies.classes#list.remove': ('rogw.tranp.compatible.libralies.classes#list.remove', 'remove(list<T_Value>, T_Value) -> T_Value'),
		'rogw.tranp.compatible.libralies.classes#list.pop': ('rogw.tranp.compatible.libralies.classes#list.pop', 'pop(list<T_Value>, int) -> T_Value'),
		'rogw.tranp.compatible.libralies.classes#list.clear': ('rogw.tranp.compatible.libralies.classes#list.clear', 'clear(list<T_Value>) -> None'),
		'rogw.tranp.compatible.libralies.classes#dict': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#tuple': ('rogw.tranp.compatible.libralies.classes#tuple', 'tuple'),
		'rogw.tranp.compatible.libralies.classes#dict.__init__': ('rogw.tranp.compatible.libralies.classes#dict.__init__', '__init__(dict<T_Key, T_Value>, Iterator<tuple<T_Key, T_Value>>) -> None'),
		'rogw.tranp.compatible.libralies.classes#dict.__iter__': ('rogw.tranp.compatible.libralies.classes#dict.__iter__', '__iter__(dict<T_Key, T_Value>) -> Iterator<T_Key>'),
		'rogw.tranp.compatible.libralies.classes#dict.__contains__': ('rogw.tranp.compatible.libralies.classes#dict.__contains__', '__contains__(dict<T_Key, T_Value>, T_Key) -> bool'),
		'rogw.tranp.compatible.libralies.classes#dict.keys': ('rogw.tranp.compatible.libralies.classes#dict.keys', 'keys(dict<T_Key, T_Value>) -> Iterator<T_Key>'),
		'rogw.tranp.compatible.libralies.classes#dict.values': ('rogw.tranp.compatible.libralies.classes#dict.values', 'values(dict<T_Key, T_Value>) -> Iterator<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.items': ('rogw.tranp.compatible.libralies.classes#dict.items', 'items(dict<T_Key, T_Value>) -> Iterator<tuple<T_Key, T_Value>>'),
		'rogw.tranp.compatible.libralies.classes#dict.pop': ('rogw.tranp.compatible.libralies.classes#dict.pop', 'pop(dict<T_Key, T_Value>, T_Key) -> T_Value'),
		'rogw.tranp.compatible.libralies.classes#dict.get': ('rogw.tranp.compatible.libralies.classes#dict.get', 'get(dict<T_Key, T_Value>, T_Key, Union<T_Value, None>) -> T_Value'),
		'rogw.tranp.compatible.libralies.classes#dict.clear': ('rogw.tranp.compatible.libralies.classes#dict.clear', 'clear(dict<T_Key, T_Value>) -> None'),
		'rogw.tranp.compatible.libralies.classes#None.__eq__': ('rogw.tranp.compatible.libralies.classes#None.__eq__', '__eq__(None, Any) -> bool'),
		'rogw.tranp.compatible.libralies.classes#None.__not__': ('rogw.tranp.compatible.libralies.classes#None.__not__', '__not__(None, Any) -> bool'),
		'rogw.tranp.compatible.libralies.classes#object': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.__init__': ('rogw.tranp.compatible.libralies.classes#object.__init__', '__init__(object) -> None'),
		'rogw.tranp.compatible.libralies.classes#type': ('rogw.tranp.compatible.libralies.classes#type', 'type<T>'),
		'rogw.tranp.compatible.libralies.classes#object.__class__': ('rogw.tranp.compatible.libralies.classes#object.__class__', '__class__(T) -> type<T>'),
		'rogw.tranp.compatible.libralies.classes#object.__module__': ('rogw.tranp.compatible.libralies.classes#object.__module__', '__module__(object) -> str'),
		'rogw.tranp.compatible.libralies.classes#object.__dict__': ('rogw.tranp.compatible.libralies.classes#object.__dict__', '__dict__(object) -> dict<str, Any>'),
		'rogw.tranp.compatible.libralies.classes#object.__name__': ('rogw.tranp.compatible.libralies.classes#object.__name__', '__name__(object) -> str'),
		'rogw.tranp.compatible.libralies.classes#object.__qualname__': ('rogw.tranp.compatible.libralies.classes#object.__qualname__', '__qualname__(object) -> str'),
		'rogw.tranp.compatible.libralies.classes#object.mro': ('rogw.tranp.compatible.libralies.classes#object.mro', 'mro(object) -> list<type<Any>>'),
		'rogw.tranp.compatible.libralies.classes#object.__getattribute__': ('rogw.tranp.compatible.libralies.classes#object.__getattribute__', '__getattribute__(object, str) -> Any'),
		'rogw.tranp.compatible.libralies.classes#object.__setattr__': ('rogw.tranp.compatible.libralies.classes#object.__setattr__', '__setattr__(object, str, Any) -> None'),
		'rogw.tranp.compatible.libralies.classes#type.__eq__': ('rogw.tranp.compatible.libralies.classes#type.__eq__', '__eq__(type<T>, type<Any>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#type.__not__': ('rogw.tranp.compatible.libralies.classes#type.__not__', '__not__(type<T>, type<Any>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#property': ('rogw.tranp.compatible.libralies.classes#property', 'property'),
		'rogw.tranp.compatible.libralies.classes#classmethod': ('rogw.tranp.compatible.libralies.classes#classmethod', 'classmethod'),
		'rogw.tranp.compatible.libralies.classes#Exception': ('rogw.tranp.compatible.libralies.classes#Exception', 'Exception'),
		'rogw.tranp.compatible.libralies.classes#Exception.__init__': ('rogw.tranp.compatible.libralies.classes#Exception.__init__', '__init__(Exception, Any) -> None'),
		'rogw.tranp.compatible.libralies.classes#super': ('rogw.tranp.compatible.libralies.classes#super', 'super() -> Any'),
		'rogw.tranp.compatible.libralies.classes#id': ('rogw.tranp.compatible.libralies.classes#id', 'id(Any) -> int'),
		'rogw.tranp.compatible.libralies.classes#print': ('rogw.tranp.compatible.libralies.classes#print', 'print(Any) -> None'),
		'rogw.tranp.compatible.libralies.classes#reversed': ('rogw.tranp.compatible.libralies.classes#reversed', 'reversed(Sequence<T_Value>) -> Iterator<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#enumerate': ('rogw.tranp.compatible.libralies.classes#enumerate', 'enumerate(Sequence<T_Value>) -> Iterator<tuple<int, T_Value>>'),
		'rogw.tranp.compatible.libralies.classes#range': ('rogw.tranp.compatible.libralies.classes#range', 'range(int) -> Iterator<int>'),
		'rogw.tranp.compatible.libralies.classes#len': ('rogw.tranp.compatible.libralies.classes#len', 'len(Sequence<Any>) -> int'),
		'rogw.tranp.compatible.libralies.classes#isinstance': ('rogw.tranp.compatible.libralies.classes#isinstance', 'isinstance(object, Union<type<Any>, tuple>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#issubclass': ('rogw.tranp.compatible.libralies.classes#issubclass', 'issubclass(type<Any>, Union<type<Any>, tuple>) -> bool'),
		'rogw.tranp.compatible.libralies.classes#open': ('rogw.tranp.compatible.libralies.classes#open', 'open(str, str, Union<str, None>) -> IO'),
		'rogw.tranp.compatible.libralies.classes#getattr': ('rogw.tranp.compatible.libralies.classes#getattr', 'getattr(object, str) -> Any'),
		'rogw.tranp.compatible.libralies.classes#setattr': ('rogw.tranp.compatible.libralies.classes#setattr', 'setattr(object, str, Any) -> None'),
		'rogw.tranp.compatible.libralies.classes#IO': ('typing#IO', 'IO'),
		'rogw.tranp.compatible.libralies.classes#Any': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#Callable': ('typing#Callable', 'Callable'),
		'rogw.tranp.compatible.libralies.classes#Generic': ('typing#Generic', 'Generic'),
		'rogw.tranp.compatible.libralies.classes#Iterator': ('typing#Iterator', 'Iterator<T>'),
		'rogw.tranp.compatible.libralies.classes#Sequence': ('typing#Sequence', 'Sequence'),
		'rogw.tranp.compatible.libralies.classes#T': ('rogw.tranp.compatible.python.template#T', 'T'),
		'rogw.tranp.compatible.libralies.classes#T_Key': ('rogw.tranp.compatible.python.template#T_Key', 'T_Key'),
		'rogw.tranp.compatible.libralies.classes#T_Value': ('rogw.tranp.compatible.python.template#T_Value', 'T_Value'),
		'rogw.tranp.compatible.libralies.classes#__actual__.name': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#__actual__.decorator.wrapped': ('rogw.tranp.compatible.python.template#T', 'T'),
		'rogw.tranp.compatible.libralies.classes#int.__init__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__init__.value': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__eq__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__eq__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__ne__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__ne__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__lt__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__lt__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__gt__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__gt__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__le__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__le__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__ge__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__ge__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__not__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__not__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool, str>'),
		'rogw.tranp.compatible.libralies.classes#int.__add__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__add__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__sub__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__sub__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__mul__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__mul__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__truediv__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__truediv__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__mod__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__mod__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__and__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__and__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__or__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__or__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, bool>'),
		'rogw.tranp.compatible.libralies.classes#int.__int__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__float__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#int.__str__.self': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#float.__init__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__init__.value': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__eq__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__eq__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__ne__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__ne__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__lt__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__lt__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__gt__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__gt__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__le__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__le__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__ge__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__ge__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__not__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__not__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool, str>'),
		'rogw.tranp.compatible.libralies.classes#float.__add__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__add__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__sub__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__sub__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__mul__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__mul__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__truediv__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__truediv__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#float.__mod__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__mod__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float>'),
		'rogw.tranp.compatible.libralies.classes#float.__int__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__float__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#float.__str__.self': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'rogw.tranp.compatible.libralies.classes#str.__init__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__init__.value': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float>'),
		'rogw.tranp.compatible.libralies.classes#str.split.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.split.delimiter': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.join.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.join.iterable': ('typing#Iterator', 'Iterator<T>'),
		'rogw.tranp.compatible.libralies.classes#str.replace.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.replace.subject': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.replace.replaced': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.find.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.find.subject': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.rfind.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.rfind.subject': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.startswith.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.startswith.subject': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.endswith.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.endswith.subject': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.format.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.format.format_text': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.format.value': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#str.__eq__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__eq__.other': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__ne__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__ne__.other': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__lt__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__lt__.other': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__gt__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__gt__.other': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__le__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__le__.other': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__ge__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__ge__.other': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__not__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__not__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool, str>'),
		'rogw.tranp.compatible.libralies.classes#str.__add__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__add__.other': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__mul__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__mul__.other': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#str.__int__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__float__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#str.__str__.self': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#bool.__init__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__init__.value': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#bool.__eq__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__eq__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#bool.__ne__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__ne__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#bool.__lt__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__lt__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#bool.__gt__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__gt__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#bool.__le__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__le__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#bool.__ge__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__ge__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool>'),
		'rogw.tranp.compatible.libralies.classes#bool.__not__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__not__.other': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, float, bool, str>'),
		'rogw.tranp.compatible.libralies.classes#bool.__add__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__add__.other': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__sub__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__sub__.other': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__mul__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__mul__.other': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__truediv__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__truediv__.other': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__mod__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__mod__.other': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__and__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__and__.other': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__or__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__or__.other': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__int__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__float__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#bool.__str__.self': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'rogw.tranp.compatible.libralies.classes#list.__init__.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.__init__.iterable': ('typing#Iterator', 'Iterator<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.__iter__.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.__mul__.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.__mul__.size': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#list.__contains__.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.__contains__.key': ('rogw.tranp.compatible.python.template#T_Value', 'T_Value'),
		'rogw.tranp.compatible.libralies.classes#list.append.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.append.elem': ('rogw.tranp.compatible.python.template#T_Value', 'T_Value'),
		'rogw.tranp.compatible.libralies.classes#list.insert.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.insert.index': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#list.insert.elem': ('rogw.tranp.compatible.python.template#T_Value', 'T_Value'),
		'rogw.tranp.compatible.libralies.classes#list.extend.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.extend.iterable': ('typing#Iterator', 'Iterator<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.remove.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.remove.elem': ('rogw.tranp.compatible.python.template#T_Value', 'T_Value'),
		'rogw.tranp.compatible.libralies.classes#list.pop.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#list.pop.index': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#list.clear.self': ('rogw.tranp.compatible.libralies.classes#list', 'list<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.__init__.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.__init__.iterable': ('typing#Iterator', 'Iterator<tuple<T_Key, T_Value>>'),
		'rogw.tranp.compatible.libralies.classes#dict.__iter__.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.__contains__.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.__contains__.key': ('rogw.tranp.compatible.python.template#T_Key', 'T_Key'),
		'rogw.tranp.compatible.libralies.classes#dict.keys.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.values.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.items.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.pop.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.pop.key': ('rogw.tranp.compatible.python.template#T_Key', 'T_Key'),
		'rogw.tranp.compatible.libralies.classes#dict.get.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#dict.get.key': ('rogw.tranp.compatible.python.template#T_Key', 'T_Key'),
		'rogw.tranp.compatible.libralies.classes#dict.get.defaults': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<T_Value, None>'),
		'rogw.tranp.compatible.libralies.classes#dict.clear.self': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<T_Key, T_Value>'),
		'rogw.tranp.compatible.libralies.classes#None.__eq__.self': ('rogw.tranp.compatible.libralies.classes#None', 'None'),
		'rogw.tranp.compatible.libralies.classes#None.__eq__.other': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#None.__not__.self': ('rogw.tranp.compatible.libralies.classes#None', 'None'),
		'rogw.tranp.compatible.libralies.classes#None.__not__.other': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#object.__init__.self': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.__class__.self': ('rogw.tranp.compatible.python.template#T', 'T'),
		'rogw.tranp.compatible.libralies.classes#object.__module__.self': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.__dict__.self': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.__name__.self': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.__qualname__.self': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.mro.self': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.__getattribute__.self': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.__getattribute__.name': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#object.__setattr__.self': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#object.__setattr__.name': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#object.__setattr__.value': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#type.__eq__.self': ('rogw.tranp.compatible.libralies.classes#type', 'type<T>'),
		'rogw.tranp.compatible.libralies.classes#type.__eq__.other': ('rogw.tranp.compatible.libralies.classes#type', 'type<Any>'),
		'rogw.tranp.compatible.libralies.classes#type.__not__.self': ('rogw.tranp.compatible.libralies.classes#type', 'type<T>'),
		'rogw.tranp.compatible.libralies.classes#type.__not__.other': ('rogw.tranp.compatible.libralies.classes#type', 'type<Any>'),
		'rogw.tranp.compatible.libralies.classes#Exception.__init__.self': ('rogw.tranp.compatible.libralies.classes#Exception', 'Exception'),
		'rogw.tranp.compatible.libralies.classes#Exception.__init__.args': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#id.instance': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#print.args': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#reversed.seq': ('typing#Sequence', 'Sequence<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#enumerate.iterable': ('typing#Sequence', 'Sequence<T_Value>'),
		'rogw.tranp.compatible.libralies.classes#range.size': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'rogw.tranp.compatible.libralies.classes#len.iterable': ('typing#Sequence', 'Sequence<Any>'),
		'rogw.tranp.compatible.libralies.classes#isinstance.obj': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#isinstance.class_or_tuple': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<type<Any>, tuple>'),
		'rogw.tranp.compatible.libralies.classes#issubclass._type': ('rogw.tranp.compatible.libralies.classes#type', 'type<Any>'),
		'rogw.tranp.compatible.libralies.classes#issubclass.class_or_tuple': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<type<Any>, tuple>'),
		'rogw.tranp.compatible.libralies.classes#open.filepath': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#open.mode': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#open.encoding': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<str, None>'),
		'rogw.tranp.compatible.libralies.classes#getattr.obj': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#getattr.name': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#setattr.obj': ('rogw.tranp.compatible.libralies.classes#object', 'object'),
		'rogw.tranp.compatible.libralies.classes#setattr.name': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#setattr.value': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.libralies.classes#__file__': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'rogw.tranp.compatible.libralies.classes#__name__': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'os#getcwd': ('os#getcwd', 'getcwd() -> str'),
		'os#path': ('os#path', 'path'),
		'os#path.exists': ('os#path.exists', 'exists(path, str) -> bool'),
		'os#path.join': ('os#path.join', 'join(path, str) -> str'),
		'os#path.dirname': ('os#path.dirname', 'dirname(path, str) -> str'),
		'os#path.basename': ('os#path.basename', 'basename(path, str) -> str'),
		'os#path.abspath': ('os#path.abspath', 'abspath(path, str) -> str'),
		'os#path.exists.self': ('os#path', 'path'),
		'os#path.exists.filepath': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'os#path.join.self': ('os#path', 'path'),
		'os#path.join.args': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'os#path.dirname.self': ('os#path', 'path'),
		'os#path.dirname.filepath': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'os#path.basename.self': ('os#path', 'path'),
		'os#path.basename.filepath': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'os#path.abspath.self': ('os#path', 'path'),
		'os#path.abspath.filepath': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'yaml#safe_load': ('yaml#safe_load', 'safe_load(IO) -> Union<list<str>, dict<str, Any>, None>'),
		'yaml#IO': ('typing#IO', 'IO'),
		'yaml#Any': ('typing#Any', 'Any'),
		'yaml#safe_load.stream': ('typing#IO', 'IO'),
		'enum#EnumType': ('enum#EnumType', 'EnumType'),
		'enum#Enum': ('enum#Enum', 'Enum'),
		'enum#Enum.__init__': ('enum#Enum.__init__', '__init__(Enum, int) -> None'),
		'enum#Enum.__eq__': ('enum#Enum.__eq__', '__eq__(Enum, Any) -> bool'),
		'enum#Enum.__ne__': ('enum#Enum.__ne__', '__ne__(Enum, Any) -> bool'),
		'enum#Enum.__not__': ('enum#Enum.__not__', '__not__(Enum, Any) -> bool'),
		'enum#Any': ('typing#Any', 'Any'),
		'enum#Enum.__init__.self': ('enum#Enum', 'Enum'),
		'enum#Enum.__init__.value': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'enum#Enum.__eq__.self': ('enum#Enum', 'Enum'),
		'enum#Enum.__eq__.other': ('typing#Any', 'Any'),
		'enum#Enum.__ne__.self': ('enum#Enum', 'Enum'),
		'enum#Enum.__ne__.other': ('typing#Any', 'Any'),
		'enum#Enum.__not__.self': ('enum#Enum', 'Enum'),
		'enum#Enum.__not__.other': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.cpp.enum#T_Self': ('rogw.tranp.compatible.cpp.enum#T_Self', 'T_Self'),
		'rogw.tranp.compatible.cpp.enum#CEnum': ('rogw.tranp.compatible.cpp.enum#CEnum', 'CEnum'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__int__': ('rogw.tranp.compatible.cpp.enum#CEnum.__int__', '__int__(CEnum) -> int'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__eq__': ('rogw.tranp.compatible.cpp.enum#CEnum.__eq__', '__eq__(CEnum, Any) -> bool'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__or__': ('rogw.tranp.compatible.cpp.enum#CEnum.__or__', '__or__(CEnum, T_Self) -> T_Self'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__ror__': ('rogw.tranp.compatible.cpp.enum#CEnum.__ror__', '__ror__(CEnum, T_Self) -> T_Self'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__hash__': ('rogw.tranp.compatible.cpp.enum#CEnum.__hash__', '__hash__(CEnum) -> int'),
		'rogw.tranp.compatible.cpp.enum#Enum': ('enum#Enum', 'Enum'),
		'rogw.tranp.compatible.cpp.enum#Any': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.cpp.enum#TypeVar': ('typing#TypeVar', 'TypeVar'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__int__.self': ('rogw.tranp.compatible.cpp.enum#CEnum', 'CEnum'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__eq__.self': ('rogw.tranp.compatible.cpp.enum#CEnum', 'CEnum'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__eq__.other': ('typing#Any', 'Any'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__or__.self': ('rogw.tranp.compatible.cpp.enum#CEnum', 'CEnum'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__or__.other': ('rogw.tranp.compatible.cpp.enum#T_Self', 'T_Self'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__ror__.self': ('rogw.tranp.compatible.cpp.enum#CEnum', 'CEnum'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__ror__.other': ('rogw.tranp.compatible.cpp.enum#T_Self', 'T_Self'),
		'rogw.tranp.compatible.cpp.enum#CEnum.__hash__.self': ('rogw.tranp.compatible.cpp.enum#CEnum', 'CEnum'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#B': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#B', 'B'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#B.AA': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#B.AA', 'AA=A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#C': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#C', 'C'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#ClassVar': ('typing#ClassVar', 'ClassVar'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#TypeAlias': ('typing#TypeAlias', 'TypeAlias'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A.nx': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#B.ny': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#B.x': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#C.nz': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#S': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_combine#S': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_combine#A': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_combine#B': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#B', 'B'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_combine#C': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#C', 'C'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI', 'DSI=dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI2': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI2', 'DSI2=dict<str, DSI=dict<str, int>>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#C2': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#C2', 'C2=C'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base', 'Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.__init__': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.__init__', '__init__(Base) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_cls': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_cls', 'return_cls(type<Self>) -> type<Self>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.make_base': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.make_base', 'make_base(type<Base>) -> Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_self', 'return_self(Self) -> Self'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.__init__': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.__init__', '__init__(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Inner': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Inner', 'Inner'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Inner.class_func': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Inner.class_func', 'class_func(type<Inner>) -> dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.first_number': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.first_number', 'first_number(Sub) -> int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.local_ref': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.local_ref', 'local_ref(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_ref': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_ref', 'member_ref(Self) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_write': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_write', 'member_write(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_ref': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_ref', 'param_ref(Sub, int) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_ref': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_ref', 'list_ref(Sub, list<Sub>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.base_ref': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.base_ref', 'base_ref(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.returns': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.returns', 'returns(Sub) -> str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.yields': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.yields', 'yields(Sub) -> Iterator<str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.invoke_method': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.invoke_method', 'invoke_method(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_with_pop': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_with_pop', 'decl_with_pop(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals', 'decl_locals(Sub) -> int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.closure': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.closure', 'closure() -> list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.assign_with_param': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.assign_with_param', 'assign_with_param(Sub, int) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.relay_access': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.relay_access', 'relay_access(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.fill_list': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.fill_list', 'fill_list(Sub, int) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_default': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_default', 'param_default(Sub, DSI=dict<str, int>) -> int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Base': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Base', 'Base(Sub) -> Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.kw_params': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.kw_params', 'kw_params(Sub, int) -> str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access', 'indexer_access(Sub, list<int>, list<str>, str) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.type_props': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.type_props', 'type_props(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_expand': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_expand', 'list_expand(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.dict_expand': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.dict_expand', 'dict_expand(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.tuple_arg': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.tuple_arg', 'tuple_arg(Sub) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_tuple': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_tuple', 'decl_tuple(Sub, tuple<int, int, int>) -> tuple<str, str, str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.imported_inner_type_ref': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.imported_inner_type_ref', 'imported_inner_type_ref(Sub, AA=A) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps', 'CalcOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.unary': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.unary', 'unary(CalcOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary', 'binary(CalcOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.tenary': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.tenary', 'tenary(CalcOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps', 'AliasOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func', 'func(AliasOps, C2=C) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps', 'TupleOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack', 'unpack(TupleOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign', 'assign(TupleOps, int) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps', 'CompOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp', 'list_comp(CompOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp', 'dict_comp(CompOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps', 'EnumOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.Values': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.Values', 'Values'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cls_assign': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cls_assign', 'cls_assign(type<EnumOps>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.assign': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.assign', 'assign(EnumOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cast': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cast', 'cast(EnumOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.comparison': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.comparison', 'comparison(EnumOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.calc': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.calc', 'calc(EnumOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable', 'Nullable'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.params': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.params', 'params(Nullable, Union<Base, None>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.returns': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.returns', 'returns(Nullable) -> Union<Base, None>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.var_move': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.var_move', 'var_move(Nullable, Base) -> str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.accessible': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.accessible', 'accessible(Nullable, Union<Sub, None>, Union<list<Sub>, None>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#T': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#T', 'T'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps', 'GenericOps<T>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.__init__': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.__init__', '__init__(GenericOps<T>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.temporal': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.temporal', 'temporal(GenericOps<T>, T) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.new': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.new', 'new(GenericOps<T>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.cast': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.cast', 'cast(GenericOps<T>, GenericOps<Sub>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps', 'WithOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps.file_load': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps.file_load', 'file_load(WithOps) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall', 'ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.cls_call': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.cls_call', 'cls_call(type<ForFuncCall>) -> str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.self_call': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.self_call', 'self_call(ForFuncCall) -> int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.func_call': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.func_call', 'func_call(ForFuncCall) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.func_call.func': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.func_call.func', 'func() -> bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.relay_call': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.relay_call', 'relay_call(ForFuncCall) -> ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.call_to_call': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.call_to_call', 'call_to_call(ForFuncCall) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.indexer_call': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.indexer_call', 'indexer_call(ForFuncCall, list<ForFuncCall>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.callable_call': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.callable_call', 'callable_call(ForFuncCall, Callable<int, str, T>) -> T'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TArgs': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TArgs', 'TArgs'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass', 'ForTemplateClass'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate', 'Delegate<TArgs>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.bind': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.bind', 'bind(Delegate<TArgs>, T, Callable<T, TArgs, None>) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.invoke': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.invoke', 'invoke(Delegate<TArgs>, TArgs) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A.func': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A.func', 'func(A, bool, int) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.bind_call': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.bind_call', 'bind_call(ForTemplateClass) -> None'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#os_path': ('os#path', 'path'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Any': ('typing#Any', 'Any'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Callable': ('typing#Callable', 'Callable'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ClassVar': ('typing#ClassVar', 'ClassVar'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Generic': ('typing#Generic', 'Generic'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Iterator': ('typing#Iterator', 'Iterator<T>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Self': ('typing#Self', 'Self'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TypeAlias': ('typing#TypeAlias', 'TypeAlias'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TypeVar': ('typing#TypeVar', 'TypeVar'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TypeVarTuple': ('typing#TypeVarTuple', 'TypeVarTuple'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#cast': ('typing#cast', 'cast(type<T>, Any) -> T'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#yaml_safe_load': ('yaml#safe_load', 'safe_load(IO) -> Union<list<str>, dict<str, Any>, None>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Enum': ('rogw.tranp.compatible.cpp.enum#CEnum', 'CEnum'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#S': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#C': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#C', 'C'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#A': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.base_str': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.__init__.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base', 'Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_cls.cls': ('rogw.tranp.compatible.libralies.classes#type', 'type<Self>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_cls.base': ('rogw.tranp.compatible.libralies.classes#type', 'type<Base>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_cls.inst': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base', 'Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.make_base.cls': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base', 'Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.make_base.inst': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base', 'Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_self.self': ('typing#Self', 'Self'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base.return_self.base': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base', 'Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.numbers': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.C': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#C', 'C'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.__init__.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Inner.value': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Inner.class_func.cls': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Inner', 'Inner'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.first_number.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.local_ref.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.local_ref.value': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_ref.self': ('typing#Self', 'Self'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_ref.a': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_ref.b': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_ref.c': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#C', 'C'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_ref.sub': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_ref.sub_cls': ('rogw.tranp.compatible.libralies.classes#type', 'type<Sub>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.member_write.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_ref.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_ref.param': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_ref.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_ref.subs': ('rogw.tranp.compatible.libralies.classes#list', 'list<Sub>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.base_ref.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.returns.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.yields.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.invoke_method.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_with_pop.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_with_pop.poped': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.a': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.if@948.if_clause@949.for@966.i': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.if@948.if_clause@949.for@966.try@983.catch@1001.e': ('rogw.tranp.compatible.libralies.classes#Exception', 'Exception'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.if@948.if_clause@949.for@966.try@983.try_clause@984.t': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.if@948.if_clause@949.for@966.try@983.catch@1001.t': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.if@948.if_clause@949.t': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.if@1056.if_clause@1057.c': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.if@1056.else_if@1075.c': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.if@1056.else@1092.c': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.c': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_locals.closure.b': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.assign_with_param.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.assign_with_param.a': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.assign_with_param.a1': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.relay_access.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.relay_access.ddb': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<int, dict<int, Base>>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.relay_access.s': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.fill_list.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.fill_list.n': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.fill_list.n_x3': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_default.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_default.d': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI', 'DSI=dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_default.n': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_default.n2': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.param_default.keys': ('rogw.tranp.compatible.libralies.classes#list', 'list<str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.Base.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.kw_params.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.kw_params.kwargs': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.kw_params.a': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.ns': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.ss': ('rogw.tranp.compatible.libralies.classes#list', 'list<str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.s': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.ns0': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.ss0': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.s0': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.ns_slice0': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.ns_slice1': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.ns_slice2': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.ss_slice': ('rogw.tranp.compatible.libralies.classes#list', 'list<str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.s_slice': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.indexer_access.dsn': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.type_props.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.type_props.a': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.type_props.b': ('rogw.tranp.compatible.libralies.classes#type', 'type<Sub>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.type_props.c': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_expand.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_expand.a': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_expand.b': ('rogw.tranp.compatible.libralies.classes#list', 'list<list<int>>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.list_expand.c': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.dict_expand.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.dict_expand.a': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.dict_expand.b': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<str, dict<str, int>>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.tuple_arg.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.tuple_arg.a': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.tuple_arg.b': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_tuple.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_tuple.p': ('rogw.tranp.compatible.libralies.classes#tuple', 'tuple<int, int, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_tuple.a': ('rogw.tranp.compatible.libralies.classes#tuple', 'tuple<int, str, bool>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_tuple.b': ('rogw.tranp.compatible.libralies.classes#tuple', 'tuple<int, int, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.decl_tuple.c': ('rogw.tranp.compatible.libralies.classes#tuple', 'tuple<str, str, str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.imported_inner_type_ref.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub', 'Sub'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.imported_inner_type_ref.b': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#B.AA', 'AA=A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Sub.imported_inner_type_ref.a': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.unary.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps', 'CalcOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.unary.n': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.unary.n_neg': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.unary.n_not': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps', 'CalcOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.n': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.nb0': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.nb1': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.fn0': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.fn1': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.fn2': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.fb0': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.fb1': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.result': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.l_in': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.l_not_in': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.n_is': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.binary.n_is_not': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.tenary.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps', 'CalcOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.tenary.n': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.tenary.s': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CalcOps.tenary.s_or_null': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<str, None>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps', 'AliasOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.z2': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#C2', 'C2=C'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.d': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI', 'DSI=dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.d_in_v': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.d2': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI2', 'DSI2=dict<str, DSI=dict<str, int>>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.d2_in_dsi': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI', 'DSI=dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.d2_in_dsi_in_v': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.z2_in_x': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#AliasOps.func.new_z2_in_x': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db_xyz#A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps', 'TupleOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2380.key0': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2380.value0': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2400.value1': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2418.key1': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2436.key2': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.d': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI2', 'DSI2=dict<str, DSI=dict<str, int>>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2467.key10': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2467.value10': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI', 'DSI=dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2484.value11': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#DSI', 'DSI=dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2499.key11': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.unpack.for@2514.key12': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps', 'TupleOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign.index': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign.t': ('rogw.tranp.compatible.libralies.classes#tuple', 'tuple<int, str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign.t0': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign.t1': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign.tu': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<int, str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign.a': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TupleOps.assign.b': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps', 'CompOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.values0': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.values1': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.values2': ('rogw.tranp.compatible.libralies.classes#list', 'list<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.strs': ('rogw.tranp.compatible.libralies.classes#list', 'list<str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.value': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.list_comp@2639.value': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.list_comp@2671.value': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.list_comp@2695.value': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.list_comp@2715.value': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.list_comp.list_comp@2762.value': ('rogw.tranp.compatible.libralies.classes#float', 'float'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps', 'CompOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.kvs0': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.kvs1': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.kvs2': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<str, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.dict_comp@2803.index': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.dict_comp@2803.key': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.dict_comp@2852.index': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.dict_comp@2852.key': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.dict_comp@2890.key': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#CompOps.dict_comp.dict_comp@2890.index': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.Values.A': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.Values.B': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cls_assign.cls': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps', 'EnumOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cls_assign.a': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.Values', 'Values'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cls_assign.d': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<Values, str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cls_assign.da': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.assign.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps', 'EnumOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.assign.a': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.Values', 'Values'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.assign.d': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<Values, str>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.assign.da': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cast.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps', 'EnumOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cast.e': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.Values', 'Values'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.cast.n': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.comparison.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps', 'EnumOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.comparison.a': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.comparison.b': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.comparison.c': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.comparison.d': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.calc.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps', 'EnumOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.calc.a': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#EnumOps.Values', 'Values'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.params.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable', 'Nullable'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.params.base': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<Base, None>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.returns.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable', 'Nullable'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.var_move.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable', 'Nullable'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.var_move.base': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Base', 'Base'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.var_move.base_or_null': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<Base, None>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.accessible.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable', 'Nullable'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.accessible.sub': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<Sub, None>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.accessible.subs': ('rogw.tranp.compatible.libralies.classes#Union', 'Union<list<Sub>, None>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.accessible.s': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#Nullable.accessible.n': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.__init__.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps', 'GenericOps<T>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.temporal.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps', 'GenericOps<T>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.temporal.value': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#T', 'T'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.temporal.a': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#T', 'T'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.new.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps', 'GenericOps<T>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.new.a': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps', 'GenericOps<int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.cast.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps', 'GenericOps<T>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.cast.sub': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps', 'GenericOps<Sub>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps.cast.b': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#GenericOps', 'GenericOps<Base>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps.file_load.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps', 'WithOps'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps.file_load.dir': ('rogw.tranp.compatible.libralies.classes#str', 'str'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps.file_load.with@3734.f': ('typing#IO', 'IO'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#WithOps.file_load.with@3734.content': ('rogw.tranp.compatible.libralies.classes#dict', 'dict<str, Any>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.cls_call.cls': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall', 'ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.self_call.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall', 'ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.func_call.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall', 'ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.relay_call.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall', 'ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.call_to_call.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall', 'ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.indexer_call.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall', 'ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.indexer_call.arr': ('rogw.tranp.compatible.libralies.classes#list', 'list<ForFuncCall>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.callable_call.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall', 'ForFuncCall'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForFuncCall.callable_call.func': ('typing#Callable', 'Callable<int, str, T>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.bind.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate', 'Delegate<TArgs>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.bind.obj': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#T', 'T'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.bind.method': ('typing#Callable', 'Callable<T, TArgs, None>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.invoke.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate', 'Delegate<TArgs>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate.invoke.args': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#TArgs', 'TArgs'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A.func.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A.func.b': ('rogw.tranp.compatible.libralies.classes#bool', 'bool'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A.func.c': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.bind_call.self': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass', 'ForTemplateClass'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.bind_call.a': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.A', 'A'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.bind_call.d': ('tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#ForTemplateClass.Delegate', 'Delegate<bool, int>'),
		'tests.unit.rogw.tranp.semantics.reflection.fixtures.test_db#value': ('rogw.tranp.compatible.libralies.classes#int', 'int'),
	}
