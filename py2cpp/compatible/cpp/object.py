from typing import TypeVar


class CVar: ...
class CP(CVar): ...
class CSP(CVar): ...
class CRef(CVar): ...
class CRaw(CVar): ...


class CMutate: ...
class CConst(CMutate): ...
class CMutable(CMutate): ...


T_V= TypeVar('T_V', bound=CVar)
T_M = TypeVar('T_M', bound=CMutate)
T_Self = TypeVar('T_Self', bound='CObject')


class CObject:
	@classmethod
	def __class_getitem__(cls: type[T_Self], var: type[T_V], mutate: type[T_M] = CMutable) -> type[T_Self]:
		return cls
