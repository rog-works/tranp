def expected_symbols() -> dict:
	return {
		'tranp.compatible.python.classes.Union': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.Unknown': 'tranp.compatible.python.classes.Unknown',
		'tranp.compatible.python.classes.int': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.float': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.str': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.bool': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.tuple': 'tranp.compatible.python.classes.tuple',
		'tranp.compatible.python.classes.Pair': 'tranp.compatible.python.classes.Pair',
		'tranp.compatible.python.classes.list': 'tranp.compatible.python.classes.list',
		'tranp.compatible.python.classes.dict': 'tranp.compatible.python.classes.dict',
		'tranp.compatible.python.classes.None': 'tranp.compatible.python.classes.None',
		'tranp.compatible.python.classes.object': 'tranp.compatible.python.classes.object',
		'tranp.compatible.python.classes.type': 'tranp.compatible.python.classes.type',
		'tranp.compatible.python.classes.super': 'tranp.compatible.python.classes.super',
		'tranp.compatible.python.classes.Exception': 'tranp.compatible.python.classes.Exception',
		'tranp.compatible.python.classes.id': 'tranp.compatible.python.classes.id',
		'tranp.compatible.python.classes.print': 'tranp.compatible.python.classes.print',
		'tranp.compatible.python.classes.enumerate': 'tranp.compatible.python.classes.enumerate',
		'tranp.compatible.python.classes.range': 'tranp.compatible.python.classes.range',
		'tranp.compatible.python.classes.len': 'tranp.compatible.python.classes.len',
		'tranp.compatible.python.classes.T_Seq': 'tranp.compatible.python.template.T_Seq',
		'tranp.compatible.python.classes.__actual__': 'tranp.compatible.python.embed.__actual__',
		'tranp.compatible.python.classes.__alias__': 'tranp.compatible.python.embed.__alias__',
		'tranp.compatible.python.classes.Any': 'typing.Any',
		'tranp.compatible.python.classes.Generic': 'typing.Generic',
		'tranp.compatible.python.classes.Iterator': 'typing.Iterator',
		'tranp.compatible.python.classes.Sequence': 'typing.Sequence',
		'tranp.compatible.python.classes.int.__init__': 'tranp.compatible.python.classes.int.__init__',
		'tranp.compatible.python.classes.int.__eq__': 'tranp.compatible.python.classes.int.__eq__',
		'tranp.compatible.python.classes.int.__ne__': 'tranp.compatible.python.classes.int.__ne__',
		'tranp.compatible.python.classes.int.__lt__': 'tranp.compatible.python.classes.int.__lt__',
		'tranp.compatible.python.classes.int.__gt__': 'tranp.compatible.python.classes.int.__gt__',
		'tranp.compatible.python.classes.int.__add__': 'tranp.compatible.python.classes.int.__add__',
		'tranp.compatible.python.classes.int.__sub__': 'tranp.compatible.python.classes.int.__sub__',
		'tranp.compatible.python.classes.int.__mul__': 'tranp.compatible.python.classes.int.__mul__',
		'tranp.compatible.python.classes.int.__truediv__': 'tranp.compatible.python.classes.int.__truediv__',
		'tranp.compatible.python.classes.int.__and__': 'tranp.compatible.python.classes.int.__and__',
		'tranp.compatible.python.classes.int.__or__': 'tranp.compatible.python.classes.int.__or__',
		'tranp.compatible.python.classes.int.__int__': 'tranp.compatible.python.classes.int.__int__',
		'tranp.compatible.python.classes.int.__float__': 'tranp.compatible.python.classes.int.__float__',
		'tranp.compatible.python.classes.int.__str__': 'tranp.compatible.python.classes.int.__str__',
		'tranp.compatible.python.classes.float.__init__': 'tranp.compatible.python.classes.float.__init__',
		'tranp.compatible.python.classes.float.__eq__': 'tranp.compatible.python.classes.float.__eq__',
		'tranp.compatible.python.classes.float.__ne__': 'tranp.compatible.python.classes.float.__ne__',
		'tranp.compatible.python.classes.float.__lt__': 'tranp.compatible.python.classes.float.__lt__',
		'tranp.compatible.python.classes.float.__gt__': 'tranp.compatible.python.classes.float.__gt__',
		'tranp.compatible.python.classes.float.__add__': 'tranp.compatible.python.classes.float.__add__',
		'tranp.compatible.python.classes.float.__sub__': 'tranp.compatible.python.classes.float.__sub__',
		'tranp.compatible.python.classes.float.__mul__': 'tranp.compatible.python.classes.float.__mul__',
		'tranp.compatible.python.classes.float.__truediv__': 'tranp.compatible.python.classes.float.__truediv__',
		'tranp.compatible.python.classes.float.__int__': 'tranp.compatible.python.classes.float.__int__',
		'tranp.compatible.python.classes.float.__float__': 'tranp.compatible.python.classes.float.__float__',
		'tranp.compatible.python.classes.float.__str__': 'tranp.compatible.python.classes.float.__str__',
		'tranp.compatible.python.classes.str.split': 'tranp.compatible.python.classes.str.split',
		'tranp.compatible.python.classes.str.join': 'tranp.compatible.python.classes.str.join',
		'tranp.compatible.python.classes.str.replace': 'tranp.compatible.python.classes.str.replace',
		'tranp.compatible.python.classes.str.find': 'tranp.compatible.python.classes.str.find',
		'tranp.compatible.python.classes.str.__eq__': 'tranp.compatible.python.classes.str.__eq__',
		'tranp.compatible.python.classes.str.__ne__': 'tranp.compatible.python.classes.str.__ne__',
		'tranp.compatible.python.classes.str.__lt__': 'tranp.compatible.python.classes.str.__lt__',
		'tranp.compatible.python.classes.str.__gt__': 'tranp.compatible.python.classes.str.__gt__',
		'tranp.compatible.python.classes.str.__add__': 'tranp.compatible.python.classes.str.__add__',
		'tranp.compatible.python.classes.str.__mul__': 'tranp.compatible.python.classes.str.__mul__',
		'tranp.compatible.python.classes.str.__int__': 'tranp.compatible.python.classes.str.__int__',
		'tranp.compatible.python.classes.str.__float__': 'tranp.compatible.python.classes.str.__float__',
		'tranp.compatible.python.classes.str.__str__': 'tranp.compatible.python.classes.str.__str__',
		'tranp.compatible.python.classes.bool.__eq__': 'tranp.compatible.python.classes.bool.__eq__',
		'tranp.compatible.python.classes.bool.__ne__': 'tranp.compatible.python.classes.bool.__ne__',
		'tranp.compatible.python.classes.bool.__lt__': 'tranp.compatible.python.classes.bool.__lt__',
		'tranp.compatible.python.classes.bool.__gt__': 'tranp.compatible.python.classes.bool.__gt__',
		'tranp.compatible.python.classes.bool.__truediv__': 'tranp.compatible.python.classes.bool.__truediv__',
		'tranp.compatible.python.classes.bool.__int__': 'tranp.compatible.python.classes.bool.__int__',
		'tranp.compatible.python.classes.bool.__float__': 'tranp.compatible.python.classes.bool.__float__',
		'tranp.compatible.python.classes.bool.__str__': 'tranp.compatible.python.classes.bool.__str__',
		'tranp.compatible.python.classes.list.__init__': 'tranp.compatible.python.classes.list.__init__',
		'tranp.compatible.python.classes.list.__iter__': 'tranp.compatible.python.classes.list.__iter__',
		'tranp.compatible.python.classes.list.append': 'tranp.compatible.python.classes.list.append',
		'tranp.compatible.python.classes.list.pop': 'tranp.compatible.python.classes.list.pop',
		'tranp.compatible.python.classes.dict.__init__': 'tranp.compatible.python.classes.dict.__init__',
		'tranp.compatible.python.classes.dict.keys': 'tranp.compatible.python.classes.dict.keys',
		'tranp.compatible.python.classes.dict.values': 'tranp.compatible.python.classes.dict.values',
		'tranp.compatible.python.classes.dict.items': 'tranp.compatible.python.classes.dict.items',
		'tranp.compatible.python.classes.object.__init__': 'tranp.compatible.python.classes.object.__init__',
		'tranp.compatible.python.classes.Exception.__init__': 'tranp.compatible.python.classes.Exception.__init__',
		'tranp.compatible.python.classes.int.__init__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__init__.value': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.int.__eq__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__eq__.other': 'typing.Any',
		'tranp.compatible.python.classes.int.__ne__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__ne__.other': 'typing.Any',
		'tranp.compatible.python.classes.int.__lt__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__lt__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.int.__gt__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__gt__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.int.__add__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__add__.other': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__sub__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__sub__.other': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__mul__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__mul__.other': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__truediv__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__truediv__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.int.__and__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__and__.other': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__or__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__or__.other': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__int__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__float__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.int.__str__.self': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.float.__init__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__init__.value': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.float.__eq__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__eq__.other': 'typing.Any',
		'tranp.compatible.python.classes.float.__ne__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__ne__.other': 'typing.Any',
		'tranp.compatible.python.classes.float.__lt__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__lt__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.float.__gt__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__gt__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.float.__add__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__add__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.float.__sub__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__sub__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.float.__mul__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__mul__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.float.__truediv__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__truediv__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.float.__int__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__float__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.float.__str__.self': 'tranp.compatible.python.classes.float',
		'tranp.compatible.python.classes.str.split.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.split.delimiter': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.join.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.join.iterable': 'typing.Iterator',
		'tranp.compatible.python.classes.str.replace.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.replace.subject': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.replace.replaced': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.find.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.find.subject': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__eq__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__eq__.other': 'typing.Any',
		'tranp.compatible.python.classes.str.__ne__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__ne__.other': 'typing.Any',
		'tranp.compatible.python.classes.str.__lt__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__lt__.other': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__gt__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__gt__.other': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__add__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__add__.other': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__mul__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__mul__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.str.__int__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__float__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.str.__str__.self': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.classes.bool.__eq__.self': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.bool.__eq__.other': 'typing.Any',
		'tranp.compatible.python.classes.bool.__ne__.self': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.bool.__ne__.other': 'typing.Any',
		'tranp.compatible.python.classes.bool.__lt__.self': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.bool.__lt__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.bool.__gt__.self': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.bool.__gt__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.bool.__truediv__.self': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.bool.__truediv__.other': 'tranp.compatible.python.classes.Union',
		'tranp.compatible.python.classes.bool.__int__.self': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.bool.__float__.self': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.bool.__str__.self': 'tranp.compatible.python.classes.bool',
		'tranp.compatible.python.classes.list.__init__.self': 'tranp.compatible.python.classes.list',
		'tranp.compatible.python.classes.list.__init__.iterable': 'typing.Iterator',
		'tranp.compatible.python.classes.list.__iter__.self': 'tranp.compatible.python.classes.list',
		'tranp.compatible.python.classes.list.append.self': 'tranp.compatible.python.classes.list',
		'tranp.compatible.python.classes.list.append.elem': 'tranp.compatible.python.template.T_Seq',
		'tranp.compatible.python.classes.list.pop.self': 'tranp.compatible.python.classes.list',
		'tranp.compatible.python.classes.list.pop.index': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.dict.__init__.self': 'tranp.compatible.python.classes.dict',
		'tranp.compatible.python.classes.dict.__init__.iterable': 'typing.Iterator',
		'tranp.compatible.python.classes.dict.keys.self': 'tranp.compatible.python.classes.dict',
		'tranp.compatible.python.classes.dict.values.self': 'tranp.compatible.python.classes.dict',
		'tranp.compatible.python.classes.dict.items.self': 'tranp.compatible.python.classes.dict',
		'tranp.compatible.python.classes.object.__init__.self': 'tranp.compatible.python.classes.object',
		'tranp.compatible.python.classes.Exception.__init__.self': 'tranp.compatible.python.classes.Exception',
		'tranp.compatible.python.classes.Exception.__init__.args': 'typing.Any',
		'tranp.compatible.python.classes.id.instance': 'typing.Any',
		'tranp.compatible.python.classes.print.args': 'typing.Any',
		'tranp.compatible.python.classes.enumerate.iterable': 'typing.Sequence',
		'tranp.compatible.python.classes.range.size': 'tranp.compatible.python.classes.int',
		'tranp.compatible.python.classes.len.iterable': 'typing.Sequence',
		'tranp.compatible.python.template.TypeVar': 'typing.TypeVar',
		'tranp.compatible.python.template.T_Seq': 'tranp.compatible.python.template.T_Seq',
		'tranp.compatible.python.embed.Callable': 'typing.Callable',
		'tranp.compatible.python.embed.TypeVar': 'typing.TypeVar',
		'tranp.compatible.python.embed.T': 'tranp.compatible.python.embed.T',
		'tranp.compatible.python.embed.__actual__': 'tranp.compatible.python.embed.__actual__',
		'tranp.compatible.python.embed.__actual__.decorator': 'tranp.compatible.python.embed.__actual__.decorator',
		'tranp.compatible.python.embed.__alias__': 'tranp.compatible.python.embed.__alias__',
		'tranp.compatible.python.embed.__alias__.decorator': 'tranp.compatible.python.embed.__alias__.decorator',
		'tranp.compatible.python.embed.__actual__.name': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.embed.__actual__.decorator.wrapped': 'tranp.compatible.python.embed.T',
		'tranp.compatible.python.embed.__alias__.name': 'tranp.compatible.python.classes.str',
		'tranp.compatible.python.embed.__alias__.decorator.wrapped': 'tranp.compatible.python.embed.T',
		'typing.Any': 'typing.Any',
		'typing.Callable': 'typing.Callable',
		'typing.Generic': 'typing.Generic',
		'typing.Sequence': 'typing.Sequence',
		'typing.TypeAlias': 'typing.TypeAlias',
		'typing.TypeVar': 'typing.TypeVar',
		'typing.T_Seq': 'typing.T_Seq',
		'typing.Iterator': 'typing.Iterator',
		'typing.Iterator.__next__': 'typing.Iterator.__next__',
		'typing.Iterator.__next__.self': 'typing.Iterator',
		'tests.unit.tranp.analyze.fixtures.test_db_xyz.X': 'tests.unit.tranp.analyze.fixtures.test_db_xyz.X',
		'tests.unit.tranp.analyze.fixtures.test_db_xyz.Y': 'tests.unit.tranp.analyze.fixtures.test_db_xyz.Y',
		'tests.unit.tranp.analyze.fixtures.test_db_xyz.Z': 'tests.unit.tranp.analyze.fixtures.test_db_xyz.Z',
		'tests.unit.tranp.analyze.fixtures.test_db_xyz.X.nx': 'tranp.compatible.python.classes.int',
		'tests.unit.tranp.analyze.fixtures.test_db_xyz.Y.ny': 'tranp.compatible.python.classes.int',
		'tests.unit.tranp.analyze.fixtures.test_db_xyz.Y.x': 'tests.unit.tranp.analyze.fixtures.test_db_xyz.X',
		'tests.unit.tranp.analyze.fixtures.test_db_xyz.Z.nz': 'tranp.compatible.python.classes.int',
		'__main__.Z': 'tests.unit.tranp.analyze.fixtures.test_db_xyz.Z',
		'__main__.TypeAlias': 'typing.TypeAlias',
		'__main__.DSI': '__main__.DSI',
		'__main__.A': '__main__.A',
		'__main__.A.__init__': '__main__.A.__init__',
		'__main__.B': '__main__.B',
		'__main__.B.B2': '__main__.B.B2',
		'__main__.B.B2.class_func': '__main__.B.B2.class_func',
		'__main__.B.__init__': '__main__.B.__init__',
		'__main__.B.func1': '__main__.B.func1',
		'__main__.B.func2': '__main__.B.func2',
		'__main__.B.func2.closure': '__main__.B.func2.closure',
		'__main__.v': 'tranp.compatible.python.classes.int',
		'__main__.d': '__main__.DSI',
		'__main__.A.s': 'tranp.compatible.python.classes.str',
		'__main__.A.__init__.self': '__main__.A',
		'__main__.B.v': 'tranp.compatible.python.classes.list',
		'__main__.B.B2.v': 'tranp.compatible.python.classes.str',
		'__main__.B.B2.class_func.cls': '__main__.B.B2',
		'__main__.B.__init__.self': '__main__.B',
		'__main__.B.func1.self': '__main__.B',
		'__main__.B.func1.b': 'tranp.compatible.python.classes.list',
		'__main__.B.func1.v': 'tranp.compatible.python.classes.bool',
		'__main__.B.func2.self': '__main__.B',
		'__main__.B.func2.for.i': 'tranp.compatible.python.classes.int',
		'__main__.B.func2.try.e': 'tranp.compatible.python.classes.Exception',
		'__main__.B.func2.closure.a': 'tranp.compatible.python.classes.int',
	}
